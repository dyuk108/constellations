# -*- coding: utf-8 -*-
#
# Конвертер каталога границ созвездий "Catalogue of Constellation Boundary Data"
# (Davenhall A.C., Leggett S.K. ftp://cdsarc.u-strasbg.fr/0/cats/VI/49)
# в формат CSV.
# Дмитрий Клыков, 2025. dyuk108.ru

from astropy.coordinates import SkyCoord
from astropy import units as u
from astropy.coordinates import FK5
import numpy as np  

# Нужно скачать каталог и положить файл constbnd.dat в папку catalogs.
# Это границы созвездий на эпоху 1875.0 года! Тогда они были по "широте" и "долготе",
# с ними очень удобно решать задачи.

# Во-первых, нужно сделать датасет, где границы не дублируются.
# Дублирование происходит, когда одна и та же граница рассматривается со стороны
# одного и другого созвездия. Эпоху нужно пересчитать на J1991.25 как у Hipparcos,
# потому что для рисования карт используется датасет на основе именно этого каталога
# с этой эпохой. Данный датасет предназначен для рисования границ на картах.
lines = [] # массив линий, строка - 4 цифры строками: координаты начала и конца линии
lines1991 = [] # то же, но с числами float и в эпохе J1991.25

f = open('catalogs/constbnd.dat')
counter = 0 # 
for s in f:
    counter += 1 # счётчик строк
    data = s.split() # массив входных данных
    
    # Начинаем работать с новым созвездием если не указано второе созвездие
    if len(data) == 3:
        RA1 = data[0] # координаты первой точки первой линии
        Dec1 = data[1]
    elif len(data) == 4:
        RA2 = data[0] # координаты второй точки текущей линии
        Dec2 = data[1]
        
        # Когда есть коорд обоих точек, рисуем линию.
        line1 = (RA1, Dec1, RA2, Dec2) # линия в "прямом" направлении
        line2 = (RA2, Dec2, RA1, Dec1) # линия в "обратном" направлении, где точки поменяны местами

        if not(line1 in lines) and not(line2 in lines): # если нет такой линии ни в прямом, ни в обратном направлении
            lines.append(line1) # добавляем в "прямом" направлении 
            
            # Всё это нужно было, чтобы исключить дубликаты: сравнивались строки.
            # Сейчас нужно преобразовать координаты в float и в эпоху J1991.25 (каталога Hipparcos).
            ra_arr = (float(RA1), float(RA2))
            dec_arr = (float(Dec1), float(Dec2))
            # Создаём объект SkyCoord из двух точек. RA дано в часах.
            c = SkyCoord(ra_arr*u.hour, dec_arr*u.degree, frame='fk5', equinox='B1875.0')
            c2 = c.transform_to(FK5(equinox='J1991.25')) # преобразуем в систему J1991.25
            # Добавляем в результирующий массив. RA в градусах.
            lines1991.append((c2[0].ra.degree, c2[0].dec.degree, c2[1].ra.degree, c2[1].dec.degree))

        # Для следующей строки координаты второй точки будут координатами первой.
        # Если это не начало нового созвездия.
        RA1 = RA2
        Dec1 = Dec2

f.close()
print(f'Прочитано строк {counter}, добавлено линий {len(lines1991)}')



fw = open('constbnd_draw.csv', 'w')
fw.write('RA1,Dec1,RA2,Dec2\n') # координаты точек начала и конца, обозначение созвездий по обе стороны
for line in lines1991:
    fw.write(f'{line[0]:.5f},{line[1]:.5f},{line[2]:.5f},{line[3]:.5f}\n')
fw.close()

# Во-вторых, нужно сделать датасет, через который можно определить, в каком созвездии находится объект.
# Для этого нужно будет перевести координаты объекта в эпоху 1875.0 года и прогнать
# через алгоритм, заглатывающий этот датасет. В файле constbnd.txt есть подсказка, как это сделать.
